#Reverse array
#include <iostream>
using namespace std;

void reverse(int arr[], int n)
{
  int start = 0;
  int end = n-1;
  while(start <= end){
      swap(arr[start], arr[end]);
      start++;
      end--;
}
}
void printarray(int arr[], int n){
   for(int i = 0; i<n; i++)
     {
        cout<<arr[i]<<" ";
    }   
   cout<<endl;
}
int main(){
  int arr[6] = {1,4,2,0,-2,15]
  int brr[5] = {2,6,3,9,4}

  reverse(arr,6);
  reverse(brr,5);

  printarray(arr,6)
  printarray(brr,5)

  return 0;
}


#SWAP ALTERNATE
#include <iostream>
using namespace std; 

void printArray(int arr[], int n);
{
  for(int i = 0; i<n; i++){
     cout<<arr[i]<<" ";
}
cout<<endl;
}

void swap(int arr[], int size){
   for(int i = 0; i<size; i+=2){
        if(i+1 < size){
          swap(arr[i], arr[i+1]);
          }
       }
}

int main(){
   int even[6] = {1,4,5,6,7,8};
   int odd[5] = {2,4,5,6,8};

   swap(even, 6);
   printArray(even, 6);
   cout<<endl;
   swap(odd, 5);
   printArray(odd,5);
}


#FIND UNIQUE
int findunique(int *arr, int size){
    int ans = 0;
    for(int i =0; i<size; i++){
        ans =ans^arr[i];
    }
    return ans;
}


